{"remainingRequest":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Alicia/ECS265/Promise_WebApp/promise/src/views/Test.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/src/views/Test.vue","mtime":1606027506939},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8vIEltcG9ydCBtYXBHZXR0ZXJzIHRvIGFsbG93IGVhc3kgYWNjZXNzIHRvIHRoZSBnZXR0ZXJzIGluIFZ1ZXggYXMgY29tcHV0ZWQgcHJvcGVydGllcwppbXBvcnQgeyBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7CgpleHBvcnQgZGVmYXVsdCB7CiAgY29tcHV0ZWQ6IHsKICAgIC8vIFVzZSBtYXBHZXR0ZXJzIHRvIGJyaW5nIGluIG5lZWRlZCBtZXRob2RzIGZyb20gdGhlIERyaXp6bGUgcGx1Z2luCiAgICAuLi5tYXBHZXR0ZXJzKCJkcml6emxlIiwgWyJkcml6emxlSW5zdGFuY2UiLCAiaXNEcml6emxlSW5pdGlhbGl6ZWQiXSksCiAgICAuLi5tYXBHZXR0ZXJzKCJjb250cmFjdHMiLCBbImdldENvbnRyYWN0RGF0YSJdKSwKCiAgICAvLyBVdGlsaXRpZXMgbmVlZGVkIHRvIHRyYW5zZm9ybSBieXRlcyB0byBzdHJpbmdzCiAgICB1dGlscygpIHsKICAgICAgcmV0dXJuIHRoaXMuZHJpenpsZUluc3RhbmNlLndlYjMudXRpbHM7CiAgICB9CiAgfSwKCiAgLy8gUmVnaXN0ZXIgc21hcnQgY29udHJhY3QgYmVmb3JlIHRoZSBjb21wb25lbnQgbW91bnRzIHRvIGVuc3VyZSBkYXRhIGlzIGF2YWlsYWJsZQogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLiRzdG9yZS5kaXNwYXRjaCgiZHJpenpsZS9SRUdJU1RFUl9DT05UUkFDVCIsIHsKICAgICAgY29udHJhY3ROYW1lOiAiUHJvbWlzZSIsCiAgICAgIG1ldGhvZDogImFkZFByb21pc2UiLAogICAgICBtZXRob2RBcmdzOiBbXQogICAgfSk7CiAgfQp9Owo="},{"version":3,"sources":["Test.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2CA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Test.vue","sourceRoot":"src/views","sourcesContent":["<!-- <template>\n <metamask/>\n</template><script> -->\n\n<template>\n  <div v-if=\"isDrizzleInitialized\" id=\"app\">\n    <h1>Start Creating</h1>\n    <drizzle-contract-form\n      contractName=\"Promise\"\n      method=\"addPromise\"\n      :placeholders=\"[]\"\n    />\n  </div>\n  <div v-else>\n    Loading application...\n  </div>\n</template>\n\n<!--\n<script>\nimport Metamask from '../components/Metamask'\nimport { mapGetters } from \"vuex\"\nexport default {\n name: 'test',\n computed: {\n    ...mapGetters(\"drizzle\", [\"drizzleInstance\", \"isDrizzleInitialized\"]),    \n    ...mapGetters(\"contracts\", [\"getContractData\"])\n },\n utils() {\n      return this.drizzleInstance.web3.utils\n    },\n beforeCreate () {\n    console.log('registerWeb3 Action dispatched from Test.vue')\n    this.$store.dispatch('registerWeb3')\n  },\n components: {\n 'metamask': Metamask\n }\n}\n</script>\n-->\n\n<script>\n// Import mapGetters to allow easy access to the getters in Vuex as computed properties\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  computed: {\n    // Use mapGetters to bring in needed methods from the Drizzle plugin\n    ...mapGetters(\"drizzle\", [\"drizzleInstance\", \"isDrizzleInitialized\"]),\n    ...mapGetters(\"contracts\", [\"getContractData\"]),\n\n    // Utilities needed to transform bytes to strings\n    utils() {\n      return this.drizzleInstance.web3.utils;\n    }\n  },\n\n  // Register smart contract before the component mounts to ensure data is available\n  created() {\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"Promise\",\n      method: \"addPromise\",\n      methodArgs: []\n    });\n  }\n};\n</script>\n\n<style scoped>\n</style>"]}]}