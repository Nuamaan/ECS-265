{"remainingRequest":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Alicia/ECS265/Promise_WebApp/promise/src/views/Contracts.vue?vue&type=style&index=0&id=2ee82057&scoped=true&lang=css&","dependencies":[{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/src/views/Contracts.vue","mtime":1607297651063},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/css-loader/dist/cjs.js","mtime":1606763940472},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1606764052930},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/postcss-loader/src/index.js","mtime":1606763998304},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/cache-loader/dist/cjs.js","mtime":1606763922194},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/vue-loader/lib/index.js","mtime":1606764052929}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY29udHJhY3RzLWhlYWRpbmcgewogIHRleHQtYWxpZ246IGxlZnQ7CiAgZGlzcGxheTogaW5saW5lOwp9CgoucGVuZGluZyB7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Cgo="},{"version":3,"sources":["Contracts.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuKA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"Contracts.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"contracts\">\n    <my-header></my-header>\n    <div v-if=\"isDrizzleInitialized\" id=\"app\">\n      <div class=\"pending center\">\n        <h2 class=\"contracts-heading\">Pending Contracts</h2>\n          <ul v-if=\"getPromise\">\n            <!-- {{ utils.toUtf8(promise) }} -->\n            <div style=\"text-align: left;\" v-for=\"(promise, i) in getPromise\" :key=\"i\">\n              <ul v-if=\"promise != 0x0\">\n                {{i+1}}. {{ utils.toUtf8(promise)}} <br />\n              </ul>\n            </div>\n          </ul>\n          <ul v-else> Oh no... </ul>\n      </div>\n      <div class=\"signed center\">\n        Sign:\n        <drizzle-contract-form\n          contractName=\"Promise\"\n          method='signPromise'\n          :placeholders=\"[]\" \n        />\n      </div>\n      <div class=\"rejected center\">\n        Reject:\n        <drizzle-contract-form\n          contractName=\"Promise\"\n          method='rejectPromise'\n          :placeholders=\"[]\" \n        />\n      </div>\n      <div class=\"signed center\">\n        <h2 class=\"contracts-heading\">Signed Contracts</h2>\n          <ul v-if=\"getSignedPromises\">\n            <div style=\"text-align: left;\" v-for=\"(promise, i) in getSignedPromises\" :key=\"i\">\n              {{i+1}}. {{ utils.toUtf8(promise)}} <br />\n            </div>\n          </ul>\n          <ul v-else> Oh no... </ul>\n      </div>\n      <div class=\"rejected center\">\n        <h2 class=\"contracts-heading\">Rejected Contracts</h2>\n          <ul v-if=\"getRejectedPromises\">\n            <div style=\"text-align: left;\" v-for=\"(promise, i) in getRejectedPromises\" :key=\"i\">\n              {{i+1}}. {{ utils.toUtf8(promise)}} <br />\n            </div>\n          </ul>\n          <ul v-else> Oh no... </ul>\n      </div>\n    </div>\n    <div v-else>\n      Loading application...\n    </div>\n    <my-footer></my-footer>\n  </div>\n</template>\n\n<script>\nimport MyHeader from '../components/Header.vue'\nimport MyFooter from '../components/Footer.vue'\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: 'contracts',\n  data () {\n    return {\n  \n    }\n  },\n\n  signedPromises () {\n    return {\n\n    }\n  },\n  \n  rejectedPromises () {\n    return {\n\n    }\n  },\n  \n  methods : {\n    print: function(idx){\n      console.log(\"contract ID: \" + idx);\n    }\n  },\n\n\n  computed: {\n    // Use mapGetters to bring in needed methods from the Drizzle plugin\n    ...mapGetters(\"drizzle\", [\"drizzleInstance\", \"isDrizzleInitialized\"]),\n    ...mapGetters(\"contracts\", [\"getContractData\"]),\n\n    getPromise() {\n      let data = this.getContractData({\n        contract: \"Promise\",\n        method: \"viewPromise\"\n      });\n      if (data === \"loading\"){\n        console.log(\"loading...\")\n        return false;\n      }\n      return data;\n    },\n\n    getSignedPromises() {\n      let signedPromises = this.getContractData({\n        contract: \"Promise\",\n        method: \"viewConfirmed\"\n      });\n      if (signedPromises === \"loading\"){\n        console.log(\"loading...\")\n        return false;\n      }\n      return signedPromises;\n    },\n\n    getRejectedPromises() {\n      let rejectedPromises = this.getContractData({\n        contract: \"Promise\",\n        method: \"viewRejected\"\n      });\n      if (rejectedPromises === \"loading\"){\n        console.log(\"loading...\")\n        return false;\n      }\n      return rejectedPromises;\n    },\n    // Utilities needed to transform bytes to strings\n    utils() {\n      return this.drizzleInstance.web3.utils;\n    }\n  },\n  // Register smart contract before the component mounts to ensure data is available\n  created() {\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"Promise\",\n      method: \"viewPromise\",\n      methodArgs: []\n    });\n    \n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"Promise\",\n      method: \"viewConfirmed\",\n      methodArgs: []\n    });\n\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"Promise\",\n      method: \"viewRejected\",\n      methodArgs: []\n    });\n  },\n  components: { MyHeader, MyFooter }\n  // created: function() {\n  //   axios.get('/static/products.json')\n  //   .then((response) =>{\n  //     this.products=response.data.products;\n  //     console.log(this.products);\n  //   });\n  // }\n}\n</script>\n\n<style scoped>\n.contracts-heading {\n  text-align: left;\n  display: inline;\n}\n\n.pending {\n  text-align: center;\n}\n\n</style>"]}]}