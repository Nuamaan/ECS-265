{"remainingRequest":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/babel-loader/lib/index.js!/Users/Alicia/ECS265/Promise_WebApp/promise/src/util/getWeb3.js","dependencies":[{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/src/util/getWeb3.js","mtime":1606027506937},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CgovKiBTb3VyY2U6IGh0dHBzOi8vaXRuZXh0LmlvL2NyZWF0ZS15b3VyLWZpcnN0LWV0aGVyZXVtLWRhcHAtd2l0aC13ZWIzLWFuZC12dWUtanMtcGFydC0yLTUyMjQ4YTc0ZDU4YSAqLwppbXBvcnQgV2ViMyBmcm9tICd3ZWIzJzsKLyoKKiAxLiBDaGVjayBmb3IgaW5qZWN0ZWQgd2ViMyAobWlzdC9tZXRhbWFzaykKKiAyLiBJZiBtZXRhbWFzay9taXN0IGNyZWF0ZSBhIG5ldyB3ZWIzIGluc3RhbmNlIGFuZCBwYXNzIG9uIHJlc3VsdAoqIDMuIEdldCBuZXR3b3JrSWQgLSBOb3cgd2UgY2FuIGNoZWNrIHRoZSB1c2VyIGlzIGNvbm5lY3RlZCB0byB0aGUgcmlnaHQgbmV0d29yayB0byB1c2Ugb3VyIGRBcHAKKiA0LiBHZXQgdXNlciBhY2NvdW50IGZyb20gbWV0YW1hc2sKKiA1LiBHZXQgdXNlciBiYWxhbmNlCiovCgp2YXIgZ2V0V2ViMyA9IG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAvLyBDaGVjayBmb3IgaW5qZWN0ZWQgd2ViMyAobWlzdC9tZXRhbWFzaykKICB2YXIgd2ViM2pzID0gd2luZG93LndlYjM7CgogIGlmICh0eXBlb2Ygd2ViM2pzICE9PSAndW5kZWZpbmVkJykgewogICAgdmFyIF93ZWIgPSBuZXcgV2ViMyh3ZWIzanMuY3VycmVudFByb3ZpZGVyKTsKCiAgICByZXNvbHZlKHsKICAgICAgaW5qZWN0ZWRXZWIzOiBfd2ViLmlzQ29ubmVjdGVkKCksCiAgICAgIHdlYjM6IGZ1bmN0aW9uIHdlYjMoKSB7CiAgICAgICAgcmV0dXJuIF93ZWI7CiAgICAgIH0KICAgIH0pOwogIH0gZWxzZSB7CiAgICAvLyB3ZWIzID0gbmV3IFdlYjMobmV3IFdlYjMucHJvdmlkZXJzLkh0dHBQcm92aWRlcignaHR0cDovL2xvY2FsaG9zdDo3NTQ1JykpIEdBTkFDSEUgRkFMTEJBQ0sKICAgIHJlamVjdChuZXcgRXJyb3IoJ1VuYWJsZSB0byBjb25uZWN0IHRvIE1ldGFtYXNrJykpOwogIH0KfSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgIC8vIFJldHJpZXZlIG5ldHdvcmsgSUQKICAgIHJlc3VsdC53ZWIzKCkudmVyc2lvbi5nZXROZXR3b3JrKGZ1bmN0aW9uIChlcnIsIG5ldHdvcmtJZCkgewogICAgICBpZiAoZXJyKSB7CiAgICAgICAgLy8gSWYgd2UgY2FuJ3QgZmluZCBhIG5ldHdvcmtJZCBrZWVwIHJlc3VsdCB0aGUgc2FtZSBhbmQgcmVqZWN0IHRoZSBwcm9taXNlCiAgICAgICAgcmVqZWN0KG5ldyBFcnJvcignVW5hYmxlIHRvIHJldHJpZXZlIG5ldHdvcmsgSUQnKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8gQXNzaWduIHRoZSBuZXR3b3JrSWQgcHJvcGVydHkgdG8gb3VyIHJlc3VsdCBhbmQgcmVzb2x2ZSBwcm9taXNlCiAgICAgICAgcmVzdWx0ID0gT2JqZWN0LmFzc2lnbih7fSwgcmVzdWx0LCB7CiAgICAgICAgICBuZXR3b3JrSWQ6IG5ldHdvcmtJZAogICAgICAgIH0pOwogICAgICAgIHJlc29sdmUocmVzdWx0KTsKICAgICAgfQogICAgfSk7CiAgfSk7Cn0pLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAvLyBSZXRyaWV2ZSBjb2luYmFzZQogICAgcmVzdWx0LndlYjMoKS5ldGguZ2V0Q29pbmJhc2UoZnVuY3Rpb24gKGVyciwgY29pbmJhc2UpIHsKICAgICAgaWYgKGVycikgewogICAgICAgIHJlamVjdChuZXcgRXJyb3IoJ1VuYWJsZSB0byByZXRyaWV2ZSBjb2luYmFzZScpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICByZXN1bHQgPSBPYmplY3QuYXNzaWduKHt9LCByZXN1bHQsIHsKICAgICAgICAgIGNvaW5iYXNlOiBjb2luYmFzZQogICAgICAgIH0pOwogICAgICAgIHJlc29sdmUocmVzdWx0KTsKICAgICAgfQogICAgfSk7CiAgfSk7Cn0pLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAvLyBSZXRyaWV2ZSBiYWxhbmNlIGZvciBjb2luYmFzZQogICAgcmVzdWx0LndlYjMoKS5ldGguZ2V0QmFsYW5jZShyZXN1bHQuY29pbmJhc2UsIGZ1bmN0aW9uIChlcnIsIGJhbGFuY2UpIHsKICAgICAgaWYgKGVycikgewogICAgICAgIHJlamVjdChuZXcgRXJyb3IoJ1VuYWJsZSB0byByZXRyaWV2ZSBiYWxhbmNlIGZvciBhZGRyZXNzOiAnICsgcmVzdWx0LmNvaW5iYXNlKSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmVzdWx0ID0gT2JqZWN0LmFzc2lnbih7fSwgcmVzdWx0LCB7CiAgICAgICAgICBiYWxhbmNlOiBiYWxhbmNlCiAgICAgICAgfSk7CiAgICAgICAgcmVzb2x2ZShyZXN1bHQpOwogICAgICB9CiAgICB9KTsKICB9KTsKfSk7CmV4cG9ydCBkZWZhdWx0IGdldFdlYjM7"},{"version":3,"sources":["/Users/Alicia/ECS265/Promise_WebApp/promise/src/util/getWeb3.js"],"names":["Web3","getWeb3","Promise","resolve","reject","web3js","window","web3","currentProvider","injectedWeb3","isConnected","Error","then","result","version","getNetwork","err","networkId","Object","assign","eth","getCoinbase","coinbase","getBalance","balance"],"mappings":";;AAAA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIC,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AACnD;AACA,MAAIC,MAAM,GAAGC,MAAM,CAACC,IAApB;;AACA,MAAI,OAAOF,MAAP,KAAkB,WAAtB,EAAmC;AACjC,QAAIE,IAAI,GAAG,IAAIP,IAAJ,CAASK,MAAM,CAACG,eAAhB,CAAX;;AACAL,IAAAA,OAAO,CAAC;AACNM,MAAAA,YAAY,EAAEF,IAAI,CAACG,WAAL,EADR;AAENH,MAAAA,IAFM,kBAEE;AACN,eAAOA,IAAP;AACD;AAJK,KAAD,CAAP;AAMD,GARD,MAQO;AACL;AACAH,IAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,+BAAV,CAAD,CAAN;AACD;AACF,CAfa,EAgBXC,IAhBW,CAgBN,UAAAC,MAAM,EAAI;AACd,SAAO,IAAIX,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C;AACAS,IAAAA,MAAM,CAACN,IAAP,GAAcO,OAAd,CAAsBC,UAAtB,CAAiC,UAACC,GAAD,EAAMC,SAAN,EAAoB;AACnD,UAAID,GAAJ,EAAS;AACP;AACAZ,QAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,+BAAV,CAAD,CAAN;AACD,OAHD,MAGO;AACL;AACAE,QAAAA,MAAM,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,MAAlB,EAA0B;AAACI,UAAAA,SAAS,EAATA;AAAD,SAA1B,CAAT;AACAd,QAAAA,OAAO,CAACU,MAAD,CAAP;AACD;AACF,KATD;AAUD,GAZM,CAAP;AAaD,CA9BW,EA+BXD,IA/BW,CA+BN,UAAAC,MAAM,EAAI;AACd,SAAO,IAAIX,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C;AACAS,IAAAA,MAAM,CAACN,IAAP,GAAca,GAAd,CAAkBC,WAAlB,CAA8B,UAACL,GAAD,EAAMM,QAAN,EAAmB;AAC/C,UAAIN,GAAJ,EAAS;AACPZ,QAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,6BAAV,CAAD,CAAN;AACD,OAFD,MAEO;AACLE,QAAAA,MAAM,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,MAAlB,EAA0B;AAAES,UAAAA,QAAQ,EAARA;AAAF,SAA1B,CAAT;AACAnB,QAAAA,OAAO,CAACU,MAAD,CAAP;AACD;AACF,KAPD;AAQD,GAVM,CAAP;AAWD,CA3CW,EA4CXD,IA5CW,CA4CN,UAAAC,MAAM,EAAI;AACd,SAAO,IAAIX,OAAJ,CAAY,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;AAC5C;AACAS,IAAAA,MAAM,CAACN,IAAP,GAAca,GAAd,CAAkBG,UAAlB,CAA6BV,MAAM,CAACS,QAApC,EAA8C,UAACN,GAAD,EAAMQ,OAAN,EAAkB;AAC9D,UAAIR,GAAJ,EAAS;AACPZ,QAAAA,MAAM,CAAC,IAAIO,KAAJ,CAAU,6CAA6CE,MAAM,CAACS,QAA9D,CAAD,CAAN;AACD,OAFD,MAEO;AACLT,QAAAA,MAAM,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,MAAlB,EAA0B;AAAEW,UAAAA,OAAO,EAAPA;AAAF,SAA1B,CAAT;AACArB,QAAAA,OAAO,CAACU,MAAD,CAAP;AACD;AACF,KAPD;AAQD,GAVM,CAAP;AAWD,CAxDW,CAAd;AA0DA,eAAeZ,OAAf","sourcesContent":["/* Source: https://itnext.io/create-your-first-ethereum-dapp-with-web3-and-vue-js-part-2-52248a74d58a */\nimport Web3 from 'web3'\n\n/*\n* 1. Check for injected web3 (mist/metamask)\n* 2. If metamask/mist create a new web3 instance and pass on result\n* 3. Get networkId - Now we can check the user is connected to the right network to use our dApp\n* 4. Get user account from metamask\n* 5. Get user balance\n*/\n\nlet getWeb3 = new Promise(function (resolve, reject) {\n  // Check for injected web3 (mist/metamask)\n  var web3js = window.web3\n  if (typeof web3js !== 'undefined') {\n    var web3 = new Web3(web3js.currentProvider)\n    resolve({\n      injectedWeb3: web3.isConnected(),\n      web3 () {\n        return web3\n      }\n    })\n  } else {\n    // web3 = new Web3(new Web3.providers.HttpProvider('http://localhost:7545')) GANACHE FALLBACK\n    reject(new Error('Unable to connect to Metamask'))\n  }\n})\n  .then(result => {\n    return new Promise(function (resolve, reject) {\n      // Retrieve network ID\n      result.web3().version.getNetwork((err, networkId) => {\n        if (err) {\n          // If we can't find a networkId keep result the same and reject the promise\n          reject(new Error('Unable to retrieve network ID'))\n        } else {\n          // Assign the networkId property to our result and resolve promise\n          result = Object.assign({}, result, {networkId})\n          resolve(result)\n        }\n      })\n    })\n  })\n  .then(result => {\n    return new Promise(function (resolve, reject) {\n      // Retrieve coinbase\n      result.web3().eth.getCoinbase((err, coinbase) => {\n        if (err) {\n          reject(new Error('Unable to retrieve coinbase'))\n        } else {\n          result = Object.assign({}, result, { coinbase })\n          resolve(result)\n        }\n      })\n    })\n  })\n  .then(result => {\n    return new Promise(function (resolve, reject) {\n      // Retrieve balance for coinbase\n      result.web3().eth.getBalance(result.coinbase, (err, balance) => {\n        if (err) {\n          reject(new Error('Unable to retrieve balance for address: ' + result.coinbase))\n        } else {\n          result = Object.assign({}, result, { balance })\n          resolve(result)\n        }\n      })\n    })\n  })\n\nexport default getWeb3\n"]}]}