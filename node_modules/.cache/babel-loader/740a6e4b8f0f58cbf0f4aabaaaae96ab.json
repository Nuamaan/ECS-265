{"remainingRequest":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/babel-loader/lib/index.js!/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/Alicia/ECS265/Promise_WebApp/promise/src/views/Contracts.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/src/views/Contracts.vue","mtime":1607405339120},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Contracts.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"contracts\">\n    <my-header></my-header>\n    <h1 class=\"center\">My Contracts</h1><br>\n    <div v-if=\"isDrizzleInitialized\" id=\"app\">\n      <div class=\"pending center\">\n        <h2 class=\"contracts-heading\">Pending Contracts</h2><br><br>\n          <div v-if=\"getAllPendingPromises\">\n\n            <div class=\"contract-list\" v-for=\"(pendingPromiseIndex, i) in getAllPendingPromiseIndices\" v-bind:key=\"i\">\n              <h5 class=\"center\">{{ getAllPendingPromiseTitles[i] }}</h5> \n              {{ getAllPendingPromises[i] }} <br><br>\n              Creator: {{ getAllPendingPromiseBuilders[i] }}<br>\n              Recipient: {{ getAllPendingPromiseRecipients[i] }}<br>\n              <div class=\"center\"><button class=\"sign-button\" v-on:click=\"signPromise(pendingPromiseIndex)\">Sign</button>\n              <button class=\"reject-button\" v-on:click=\"rejectPromise(pendingPromiseIndex)\">Reject</button></div>\n            </div>\n          </div>\n      </div>\n      <div class=\"signed center\">\n        <h2 class=\"contracts-heading\">Signed Contracts</h2><br><br>\n            <div v-if=\"getAllSignedPromises\">\n\n              <div class=\"contract-list\" v-for=\"(signedPromiseTitle, i) in getAllSignedPromiseTitles\" v-bind:key=\"i\">\n                <h5 class=\"center\">{{ getAllSignedPromiseTitles[i] }}</h5> \n                {{ getAllSignedPromises[i] }} <br><br>\n                Creator: {{ getAllSignedPromiseBuilders[i] }}<br>\n                Recipient: {{ getAllSignedPromiseRecipients[i] }}<br>\n              </div>\n\n          </div>\n      </div>\n      <div class=\"rejected center\">\n        <h2 class=\"contracts-heading\">Rejected Contracts</h2><br><br> \n            <div v-if=\"getAllRejectedPromises\">\n\n              <div class=\"contract-list\" v-for=\"(rejectedPromiseTitle, i) in getAllRejectedPromiseTitles\" v-bind:key=\"i\">\n                <h5 class=\"center\">{{ getAllRejectedPromiseTitles[i] }}</h5> \n                {{ getAllRejectedPromises[i] }} <br><br>\n                Creator: {{ getAllRejectedPromiseBuilders[i] }}<br>\n                Recipient: {{ getAllRejectedPromiseRecipients[i] }}<br>\n              </div>\n\n          </div>\n      </div>\n    </div>\n    <div class=\"center-screen\" v-else>\n      Detecting Metamask...\n    </div>\n    <!-- <div class='metamask-info'>\n      <p>Account: {{ web3.coinbase }}</p>\n    </div> -->\n    <my-footer></my-footer>\n  </div>\n</template>\n\n<script>\nimport MyHeader from '../components/Header.vue'\nimport MyFooter from '../components/Footer.vue'\nimport { mapGetters } from \"vuex\";\n\nexport default {\n  name: 'contracts',\n  data () {\n    return {\n \n    }\n  },\n  computed: {\n    // web3 () {\n    //   return this.$store.state.web3\n    // },\n\n    // Use mapGetters to bring in needed methods from the Drizzle plugin\n    ...mapGetters(\"drizzle\", [\"drizzleInstance\", \"isDrizzleInitialized\"]),\n    ...mapGetters(\"accounts\", [\"activeAccount\", \"activeBalance\"]),\n    ...mapGetters(\"contracts\", [\"getContractData\"]),\n    \n\n    /***************Function for Pending Promises************************* */\n    /**\n     *  This function returns the list of pending promises for a single user.\n     *  data contains an array of strings.\n     *  @returns An array of strings that contain Promise details.\n     */\n    getAllPendingPromises() {\n      let data = this.getContractData({\n        contract: \"SolidPromise\",\n        method: \"viewAllPendingPromises\"\n      });\n      if (data === \"loading\") return false;\n      return data;\n    },\n\n    /**\n     * This function returns the list of the titles of the pending promises for a single user.\n     * @returns An array of strings that contain Promise titles.\n     */\n\n    getAllPendingPromiseTitles() {\n      let data = this.getContractData({\n        contract: \"SolidPromise\",\n        method: \"viewAllPendingPromiseTitles\"\n      });\n      if (data === \"loading\") return false;\n      return data;\n    },\n\n\n    /**\n     * This function returns the list of the creators of the pending promises for a single user.\n     * @returns An array of strings that contain Promise titles.\n     */\n\n    getAllPendingPromiseBuilders() {\n      let data = this.getContractData({\n        contract: \"SolidPromise\",\n        method: \"viewAllPendingPromiseBuilders\"\n      });\n      if (data === \"loading\") return false;\n      return data;\n    },\n\n    /**\n     * This function returns the list of the recipients of the pending promises for a single user.\n     * @returns An array of strings that contain Promise titles.\n     */\n\n    getAllPendingPromiseRecipients() {\n      let data = this.getContractData({\n        contract: \"SolidPromise\",\n        method: \"viewAllPendingPromiseRecipients\"\n      });\n      if (data === \"loading\") return false;\n      return data;\n    },\n\n    /**\n     * This function returns the list of the indices of the pending promises for a single user.\n     * @returns An array of integers that contain Promise indices.\n     */\n\n    getAllPendingPromiseIndices() {\n      let data = this.getContractData({\n        contract: \"SolidPromise\",\n        method: \"viewAllPendingPromiseIndices\"\n      });\n      if (data === \"loading\") return false;\n      return data;\n    },\n\n    /*************************End of Functions for Pending************************************************* */\n\n    /**************************Functions for Signed Promises************************************************ */\n\n    /**\n     *  This function returns the list of signed promises for a single user.\n     *  data contains an array of strings.\n     *  @returns An array of strings that contain Promise details.\n     */\n    getAllSignedPromises() {\n      let data = this.getContractData({\n        contract: \"SolidPromise\",\n        method: \"viewAllSignedPromises\"\n      });\n      if (data === \"loading\") return false;\n      return data;\n    },\n\n    /**\n     * This function returns the list of the titles of the signed promises for a single user.\n     * @returns An array of strings that contain Promise titles.\n     */\n\n    getAllSignedPromiseTitles() {\n      let data = this.getContractData({\n        contract: \"SolidPromise\",\n        method: \"viewAllSignedPromiseTitles\"\n      });\n      if (data === \"loading\") return false;\n      return data;\n    },\n\n    /**\n     * This function returns the list of the creators of the signed promises for a single user.\n     * @returns An array of strings that contain Promise titles.\n     */\n\n    getAllSignedPromiseBuilders() {\n      let data = this.getContractData({\n        contract: \"SolidPromise\",\n        method: \"viewAllSignedPromiseBuilders\"\n      });\n      if (data === \"loading\") return false;\n      return data;\n    },\n\n    /**\n     * This function returns the list of the recipients of the signed promises for a single user.\n     * @returns An array of strings that contain Promise titles.\n     */\n\n    getAllSignedPromiseRecipients() {\n      let data = this.getContractData({\n        contract: \"SolidPromise\",\n        method: \"viewAllSignedPromiseRecipients\"\n      });\n      if (data === \"loading\") return false;\n      return data;\n    },\n    /*************************End of Functions for Signed************************************************* */\n\n    /*************************Start of Functions for Rejected********************************************* */\n    \n    /**\n     *  This function returns the list of rejected promises for a single user.\n     *  data contains an array of strings.\n     *  @returns An array of strings that contain Promise details.\n     */\n    getAllRejectedPromises() {\n      let data = this.getContractData({\n        contract: \"SolidPromise\",\n        method: \"viewAllRejectedPromises\"\n      });\n      if (data === \"loading\") return false;\n      return data;\n    },\n\n    /**\n     * This function returns the list of the titles of the rejected promises for a single user.\n     * @returns An array of strings that contain Promise titles.\n     */\n\n    getAllRejectedPromiseTitles() {\n      let data = this.getContractData({\n        contract: \"SolidPromise\",\n        method: \"viewAllRejectedPromiseTitles\"\n      });\n      if (data === \"loading\") return false;\n      return data;\n    },\n\n    /**\n     * This function returns the list of the creators of the rejected promises for a single user.\n     * @returns An array of strings that contain Promise titles.\n     */\n\n    getAllRejectedPromiseBuilders() {\n      let data = this.getContractData({\n        contract: \"SolidPromise\",\n        method: \"viewAllRejectedPromiseBuilders\"\n      });\n      if (data === \"loading\") return false;\n      return data;\n    },\n\n    /**\n     * This function returns the list of the recipients of the rejected promises for a single user.\n     * @returns An array of strings that contain Promise titles.\n     */\n\n    getAllRejectedPromiseRecipients() {\n      let data = this.getContractData({\n        contract: \"SolidPromise\",\n        method: \"viewAllRejectedPromiseRecipients\"\n      });\n      if (data === \"loading\") return false;\n      return data;\n    },\n\n    /*************************End of Functions for Rejected************************************************* */\n\n    // Utilities needed to transform bytes to strings\n    utils() {\n      return this.drizzleInstance.web3.utils;\n    }\n  },\n  // Register smart contract before the component mounts to ensure data is available\n  created() {\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"SolidPromise\",\n      method: \"viewAllPendingPromises\",\n      methodArgs: []\n    });\n\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"SolidPromise\",\n      method: \"viewAllPendingPromiseTitles\",\n      methodArgs: []\n    });\n\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"SolidPromise\",\n      method: \"viewAllPendingPromiseBuilders\",\n      methodArgs: []\n    });\n\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"SolidPromise\",\n      method: \"viewAllPendingPromiseRecipients\",\n      methodArgs: []\n    });\n\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"SolidPromise\",\n      method: \"viewAllSignedPromises\",\n      methodArgs: []\n    });\n\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"SolidPromise\",\n      method: \"viewAllSignedPromiseTitles\",\n      methodArgs: []\n    });\n\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"SolidPromise\",\n      method: \"viewAllSignedPromiseBuilders\",\n      methodArgs: []\n    });\n\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"SolidPromise\",\n      method: \"viewAllSignedPromiseRecipients\",\n      methodArgs: []\n    });\n\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"SolidPromise\",\n      method: \"viewAllRejectedPromises\",\n      methodArgs: []\n    });\n\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"SolidPromise\",\n      method: \"viewAllRejectedPromiseTitles\",\n      methodArgs: []\n    });\n\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"SolidPromise\",\n      method: \"viewAllRejectedPromiseBuilders\",\n      methodArgs: []\n    });\n\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"SolidPromise\",\n      method: \"viewAllRejectedPromiseRecipients\",\n      methodArgs: []\n    });\n\n    this.$store.dispatch(\"drizzle/REGISTER_CONTRACT\", {\n      contractName: \"SolidPromise\",\n      method: \"viewAllPendingPromiseIndices\",\n      methodArgs: []\n    });   \n    \n  },\n  methods: {\n    signPromise(index) {\n      this.drizzleInstance.contracts['SolidPromise'].methods['signPromise'].cacheSend(\n        parseInt(index)\n      )\n    },\n    rejectPromise(index) {\n      this.drizzleInstance.contracts['SolidPromise'].methods['rejectPromise'].cacheSend(\n        parseInt(index)\n      )\n    }\n  },\n  components: { MyHeader, MyFooter }\n}\n</script>\n\n<style scoped>\n.contracts-heading {\n  text-align: left;\n  display: inline;\n}\n.pending {\n  text-align: left;\n}\n\n.signed {\n  text-align: left;\n}\n\n.rejected {\n  text-align: left;\n}\n\n.promiseTitle {\n  display: inline;\n  margin-left: 10px;\n  margin-top: 10px;\n  float:right;\n}\n\n.contract-list {\n  /* border:4px solid #688ea695; */\n  border-width: 25%;\n  text-align: left;\n  background-color: #F0F0F0;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  padding: 5px 10px 5px 10px;\n  -moz-box-shadow: 0px 0px 15px #5c7789;\n  -webkit-box-shadow: 0px 0px 15px #5c7789;\n  box-shadow: 0px 0px 15px #5c7789;\n\n}\n\n.reject-button {\n  background-color: darksalmon;\n  /* border: 1px solid black; */\n  color: rgb(48, 47, 47);\n  font-weight: bold;\n}\n\n.sign-button {\n  background-color: darkseagreen;\n  /* border: 1px solid black; */\n  color: rgb(48, 47, 47);\n  font-weight: bold;\n}\n</style>"],"sourceRoot":"src/views"}]}