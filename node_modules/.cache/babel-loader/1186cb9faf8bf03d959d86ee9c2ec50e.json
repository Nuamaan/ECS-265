{"remainingRequest":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/babel-loader/lib/index.js!/Users/Alicia/ECS265/Promise_WebApp/promise/src/drizzleOptions.js","dependencies":[{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/src/drizzleOptions.js","mtime":1606243803679},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/Alicia/ECS265/Promise_WebApp/promise/node_modules/babel-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8gSW1wb3J0IGNvbnRyYWN0cwovLyBpbXBvcnQgTWlncmF0aW9ucyBmcm9tICcuLi9idWlsZC9jb250cmFjdHMvTWlncmF0aW9ucy5qc29uJwppbXBvcnQgUHJvbWlzZSBmcm9tICcuLi9idWlsZC9jb250cmFjdHMvUHJvbWlzZS5qc29uJzsKLyoqCiAqIENvbnRyYWN0cyBpcyBhbiBhcnJheSBvZiBlaXRoZXIgY29udHJhY3QgYXJ0aWZhY3QgZmlsZXMgb3IgV2ViMyBjb250cmFjdCBvYmplY3RzLiAKICogVGhlIG9iamVjdHMgaGF2ZSBhIGNvbnRyYWN0TmFtZSBhbmQgd2ViM0NvbnRyYWN0IGtleS4KICovCgp2YXIgb3B0aW9ucyA9IHsKICBjb250cmFjdHM6IFtQcm9taXNlXSwKICAvLyBldmVudHM6IHsKICAvLyAgIFByb21pc2U6IFsKICAvLyAgICAgIm5vdGlmeSIKICAvLyAgIF0KICAvLyB9LAogIHBvbGxzOiB7CiAgICBibG9ja3M6IDMwMDAKICB9LAogIHN5bmNBbHdheXM6IGZhbHNlLAogIHdlYjM6IHsKICAgIGZhbGxiYWNrOiB7CiAgICAgIHR5cGU6ICJ3cyIsCiAgICAgIHVybDogIndzOi8vMTI3LjAuMC4xOjk1NDUiCiAgICB9CiAgfQp9OwpleHBvcnQgZGVmYXVsdCBvcHRpb25zOw=="},{"version":3,"sources":["/Users/Alicia/ECS265/Promise_WebApp/promise/src/drizzleOptions.js"],"names":["Promise","options","contracts","polls","blocks","syncAlways","web3","fallback","type","url"],"mappings":"AAAA;AACA;AACA,OAAOA,OAAP,MAAoB,iCAApB;AAGA;AACA;AACA;AACA;;AAEA,IAAMC,OAAO,GAAG;AACZC,EAAAA,SAAS,EAAE,CAACF,OAAD,CADC;AAEZ;AACA;AACA;AACA;AACA;AACAG,EAAAA,KAAK,EAAE;AACLC,IAAAA,MAAM,EAAE;AADH,GAPK;AAUZC,EAAAA,UAAU,EAAE,KAVA;AAWZC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,IAAI,EAAE,IADE;AAERC,MAAAA,GAAG,EAAE;AAFG;AADN;AAXM,CAAhB;AAmBA,eAAeR,OAAf","sourcesContent":["// Import contracts\n// import Migrations from '../build/contracts/Migrations.json'\nimport Promise from '../build/contracts/Promise.json'\n\n\n/**\n * Contracts is an array of either contract artifact files or Web3 contract objects. \n * The objects have a contractName and web3Contract key.\n */\n\nconst options = {\n    contracts: [Promise],\n    // events: {\n    //   Promise: [\n    //     \"notify\"\n    //   ]\n    // },\n    polls: {\n      blocks: 3000\n    },\n    syncAlways: false,\n    web3: {\n      fallback: {\n        type: \"ws\",\n        url: \"ws://127.0.0.1:9545\"\n      }\n    }\n  }\n\nexport default options"]}]}